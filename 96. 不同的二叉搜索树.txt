96. 不同的二叉搜索树

给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？

示例:

输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
   

class Solution {
    public int numTrees(int n) {
        int[] num=new int[n+1];  
        num[0]=0;
        int count;
        for(int i=1;i<=n;i++){  //当i固定时，前i个数值存储的是n=i时右子树不同长度时的的个数，比如当i固定为2时，第一个存储的值为右子树长度为1的个数，即1，第二个存储的右子树长度为2的个数，动态规划，当i变成3时，第三个数恒为1，新的前2个数与老的前2个数有关系
            num[i]=1;
            count=0;
            for(int j=i-1;j>0;j--){
                count+=num[j];
                num[j]=count+num[j-1];
            }
        }
        count=0;
        for(int i=1;i<=n;i++) count+=num[i];
        return count;
    }
}