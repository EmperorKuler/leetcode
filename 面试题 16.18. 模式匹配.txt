面试题 16.18. 模式匹配

你有两个字符串，即pattern和value。 pattern字符串由字母"a"和"b"组成，用于描述字符串中的模式。例如，字符串"catcatgocatgo"匹配模式"aabab"（其中"cat"是"a"，"go"是"b"），该字符串也匹配像"a"、"ab"和"b"这样的模式。但需注意"a"和"b"不能同时表示相同的字符串。编写一个方法判断value字符串是否匹配pattern字符串。

示例 1：

输入： pattern = "abba", value = "dogcatcatdog"
输出： true

示例 2：

输入： pattern = "abba", value = "dogcatcatfish"
输出： false

示例 3：

输入： pattern = "aaaa", value = "dogcatcatdog"
输出： false

示例 4：

输入： pattern = "abba", value = "dogdogdogdog"
输出： true
解释： "a"="dogdog",b=""，反之也符合规则

提示：

    0 <= len(pattern) <= 1000
    0 <= len(value) <= 1000
    你可以假设pattern只包含字母"a"和"b"，value仅包含小写字母。

class Solution {
    public boolean patternMatching(String pattern, String value) {
        if(pattern.length()==0){
            if(value.length()==0) return true;
            else return false;
        }
        int anum=0,bnum=0;
        for(int i=0;i<pattern.length();i++){
            if(pattern.charAt(i)=='a') anum++;
            else bnum++;
        }

        int length=value.length();

		//0不能做除数，单独处理
        if(anum==0||bnum==0){
            int num=Math.max(anum,bnum);
            if(length%num!=0) return false;
            int n=length/num;
            String ab=value.substring(0,n);
            for(int i=n;i<length;i+=n){
                if(!ab.equals(value.substring(i,i+n))) return false;
            }
            return true;
        }

        
        for(int i=0;i<=length/anum;i++){
            if((length-i*anum)%bnum!=0) continue;
            int j=(length-i*anum)/bnum;
            String a=null,b=null;

            int nowPattern=0,nowValue=0;
            for(;nowPattern<pattern.length();nowPattern++){
                if(pattern.charAt(nowPattern)=='a'){
                    if(a==null){
                        a=value.substring(nowValue,nowValue+i);
                        nowValue+=i;
                    }else if(value.substring(nowValue,nowValue+i).equals(a)){                  
                        nowValue+=i;
                    }else break;
                }else{
                    if(b==null){
                        b=value.substring(nowValue,nowValue+j);
                        nowValue+=j;
                    }else if(value.substring(nowValue,nowValue+j).equals(b)){                  
                        nowValue+=j;
                    }else break;
                }
            }
            if(nowPattern==pattern.length()){
                if(!a.equals(b)) return true;
            }
        }
        return false;
    }
}