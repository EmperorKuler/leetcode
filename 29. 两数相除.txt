29. 两数相除

给定两个整数，被除数 dividend 和除数 divisor。将两数相除，要求不使用乘法、除法和 mod 运算符。

返回被除数 dividend 除以除数 divisor 得到的商。

整数除法的结果应当截去（truncate）其小数部分，例如：truncate(8.345) = 8 以及 truncate(-2.7335) = -2

 

示例 1:

输入: dividend = 10, divisor = 3
输出: 3
解释: 10/3 = truncate(3.33333..) = truncate(3) = 3

示例 2:

输入: dividend = 7, divisor = -3
输出: -2
解释: 7/-3 = truncate(-2.33333..) = -2

class Solution {
    public int divide(int dividend, int divisor) {
        //只有这一种情况会溢出
        if(dividend==Integer.MIN_VALUE&&divisor==-1) return Integer.MAX_VALUE;
        int flag=1;
        if(dividend>0){
            flag=-flag;
            dividend=-dividend;
        } 
        if(divisor>0){
            flag=-flag;
            divisor=-divisor;
        } 

        return mydivide(dividend,divisor)*flag;
    }

    public int mydivide(int dividend, int divisor){
        if(dividend>divisor) return 0;

        int sum=divisor;
        int count=1;
        //关键在于此，当出现sum+sum>0说明越界，说明long类型下sum+sum也会超过dividend，已经过半，直接dividend-sum即可
        while(sum+sum>=dividend&&sum+sum<0){
                count+=count;
                sum+=sum;
        }
        return count+mydivide(dividend-sum,divisor);
    }
}