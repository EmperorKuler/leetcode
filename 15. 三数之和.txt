15. 三数之和

给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

 

示例：

给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result=new ArrayList<>();
        Arrays.sort(nums);
        int i=0,j=0,k=0;
        for(;i<nums.length-2;i++){
            //双指针遍历，降低了n倍复杂度，如果纯右移指针，那复杂度为o(n3),双指针o(n2)
            if(i!=0&&nums[i]==nums[i-1]) continue;
            int m=-nums[i];
            for(j=i+1,k=nums.length-1;j<k;){
                if(j!=i+1&&nums[j]==nums[j-1]) {
                    j++;
                    continue;
                }
                if(k!=nums.length-1&&nums[k]==nums[k+1]) {
                    k--;
                    continue;
                }
                if(nums[j]+nums[k]>m) k--;
                else if(nums[j]+nums[k]<m) j++;
                else{
                    List<Integer> list = new ArrayList<Integer>();
                    list.add(nums[i]);
                    list.add(nums[j]);
                    list.add(nums[k]);
                    result.add(list);
                    j++;
                    k--;
                }
            }
        }
        return result;
    }
}