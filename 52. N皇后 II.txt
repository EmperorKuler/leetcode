52. N皇后 II

n 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。

上图为 8 皇后问题的一种解法。

给定一个整数 n，返回 n 皇后不同的解决方案的数量。

示例:

输入: 4
输出: 2
解释: 4 皇后问题存在如下两个不同的解法。
[
 [".Q..",  // 解法 1
  "...Q",
  "Q...",
  "..Q."],

 ["..Q.",  // 解法 2
  "Q...",
  "...Q",
  ".Q.."]
]

 

提示：

    皇后，是国际象棋中的棋子，意味着国王的妻子。皇后只做一件事，那就是“吃子”。当她遇见可以吃的棋子时，就迅速冲上去吃掉棋子。当然，她横、竖、斜都可走一或七步，可进可退。（引用自 百度百科 - 皇后 ）
	
代码：
class Solution {
    boolean[] col;
    boolean[] left;
    boolean[] right;
    boolean[][] result;
    int count=0;

    public int totalNQueens(int n) {
        col=new boolean[n];
        left=new boolean[2*n-1];//建立左右两斜线的约束
        right=new boolean[2*n-1];
        doRow(0,n);
        return count;
    }

    public void doRow(int k, int n){
        if(k==n){
            count++;
            return;
        }
        for(int i=0;i<n;i++){
            int kleft=n-1-k+i,kright=i+k;
            if(col[i]||left[kleft]||right[kright]) continue;
            col[i]=left[kleft]=right[kright]=true;
            doRow(k+1,n);
            col[i]=left[kleft]=right[kright]=false;
        }
    }
}