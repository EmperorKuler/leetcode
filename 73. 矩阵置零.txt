73. 矩阵置零

给定一个 m x n 的矩阵，如果一个元素为 0，则将其所在行和列的所有元素都设为 0。请使用原地算法。

示例 1:

输入: 
[
  [1,1,1],
  [1,0,1],
  [1,1,1]
]
输出: 
[
  [1,0,1],
  [0,0,0],
  [1,0,1]
]

示例 2:

输入: 
[
  [0,1,2,0],
  [3,4,5,2],
  [1,3,1,5]
]
输出: 
[
  [0,0,0,0],
  [0,4,5,0],
  [0,3,1,0]
]

进阶:

    一个直接的解决方案是使用  O(mn) 的额外空间，但这并不是一个好的解决方案。
    一个简单的改进方案是使用 O(m + n) 的额外空间，但这仍然不是最好的解决方案。
    你能想出一个常数空间的解决方案吗？

class Solution {
    public void setZeroes(int[][] matrix) {
        //两方法完全一样的，只是写法稍有不同
        // int m=-1,n=-1;
        // for(int i=0;i<matrix.length;i++){
        //     for(int j=0;j<matrix[0].length;j++){
        //         if(i==m||j==n)
        //             continue;
        //         if(matrix[i][j]==0){
        //             if(m==-1){
        //                 for(m=0;m<matrix.length;m++) matrix[m][j]=matrix[m][j]==0?-1:0;
        //                 for(n=0;n<matrix[0].length;n++) matrix[i][n]=matrix[i][n]==0?-1:0;
        //                 m=i;
        //                 n=j;                     
        //             }else{
        //                 matrix[m][j]=-1;
        //                 matrix[i][n]=-1;
        //             }
        //         }
        //     }
        // }
        // if(m!=-1){
        //     for(int i=0;i<matrix.length;i++){
        //         if(matrix[i][n]!=0)
        //             for(int j=0;j<matrix[0].length;j++)
        //                 matrix[i][j]=0;
        //     }
        //     for(int j=0;j<matrix[0].length;j++){
        //         if(matrix[m][j]!=0)
        //             for(int i=0;i<matrix.length;i++)
        //                 matrix[i][j]=0;
        //     }
        // }
        int m=-1,n=-1;
        for(int i=0;i<matrix.length;i++){
            for(int j=0;j<matrix[0].length;j++){
                if(matrix[i][j]==0){
                    if(m==-1){
                        m=i;
                        n=j;                     
                    }else{
                        matrix[m][j]=0;
                        matrix[i][n]=0;
                    }
                }
            }
        }
        if(m!=-1){
            matrix[m][n]=1;
            for(int i=0;i<matrix.length;i++){
                if(matrix[i][n]==0)
                    for(int j=0;j<matrix[0].length;j++)
                        matrix[i][j]=0;
                else matrix[i][n]=0;
            }
            for(int j=0;j<matrix[0].length;j++){
                if(matrix[m][j]==0)
                    for(int i=0;i<matrix.length;i++)
                        matrix[i][j]=0;
                else matrix[m][j]=0;
            }
        }
    }
}