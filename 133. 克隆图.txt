133. 克隆图

给你无向 连通 图中一个节点的引用，请你返回该图的 深拷贝（克隆）。

图中的每个节点都包含它的值 val（int） 和其邻居的列表（list[Node]）。

class Node {
    public int val;
    public List<Node> neighbors;
}

/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> neighbors;
    
    public Node() {
        val = 0;
        neighbors = new ArrayList<Node>();
    }
    
    public Node(int _val) {
        val = _val;
        neighbors = new ArrayList<Node>();
    }
    
    public Node(int _val, ArrayList<Node> _neighbors) {
        val = _val;
        neighbors = _neighbors;
    }
}
*/

class Solution {
    Map<Integer,Node> map=new HashMap<>();
    public Node cloneGraph(Node node) {
        if(node==null) return null;
        return getNode(node);
    }

    public Node getNode(Node node){
        int val=node.val;
        Node result=new Node(val);
        this.map.put(val,result);
        for(Node n:node.neighbors){
            Node mapNode=this.map.get(n.val);
            if(mapNode==null){
                result.neighbors.add(getNode(n));
            }else{
                result.neighbors.add(mapNode);
            }
        }
        return result;
    }
}