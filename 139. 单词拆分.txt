139. 单词拆分

给定一个非空字符串 s 和一个包含非空单词列表的字典 wordDict，判定 s 是否可以被空格拆分为一个或多个在字典中出现的单词。

说明：

    拆分时可以重复使用字典中的单词。
    你可以假设字典中没有重复的单词。

示例 1：

输入: s = "leetcode", wordDict = ["leet", "code"]
输出: true
解释: 返回 true 因为 "leetcode" 可以被拆分成 "leet code"。

示例 2：

输入: s = "applepenapple", wordDict = ["apple", "pen"]
输出: true
解释: 返回 true 因为 "applepenapple" 可以被拆分成 "apple pen apple"。
     注意你可以重复使用字典中的单词。

示例 3：

输入: s = "catsandog", wordDict = ["cats", "dog", "sand", "and", "cat"]
输出: false

class Solution {
    public boolean wordBreak(String s, List<String> wordDict) { 
        boolean[] dp=new boolean[s.length()];
        boolean flag=false;
        for(int i=0;i<dp.length;i++){
            for(String w:wordDict){
                int j=i-w.length()+1;
                if(j<0) continue;
                if(j<1) flag=true;
                else flag=dp[j-1];
                if(flag&&s.substring(j,i+1).equals(w)){
                    dp[i]=true;         //dp[i]表示前i个能否匹配，显然只要能匹配一种可能前i个就能匹配，若是所有都不能匹配，也不用专门让dp[i]=false;因为dp[i]数组默认为false;
                    break;
                } 
            }
        }
        return dp[dp.length-1];
    }
}